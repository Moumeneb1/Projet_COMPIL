/* Generated By:JavaCC: Do not edit this line. HelloConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HelloConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MOINS = 6;
  /** RegularExpression Id. */
  int MULTIPLICATION = 7;
  /** RegularExpression Id. */
  int DEVISION = 8;
  /** RegularExpression Id. */
  int LETTRE = 9;
  /** RegularExpression Id. */
  int NUMERO = 10;
  /** RegularExpression Id. */
  int SEMICOLON = 11;
  /** RegularExpression Id. */
  int OBRACE = 12;
  /** RegularExpression Id. */
  int CBRACE = 13;
  /** RegularExpression Id. */
  int OPAR = 14;
  /** RegularExpression Id. */
  int CPAR = 15;
  /** RegularExpression Id. */
  int COLON = 16;
  /** RegularExpression Id. */
  int COMMA = 17;
  /** RegularExpression Id. */
  int TYPE = 18;
  /** RegularExpression Id. */
  int BOOLEAN = 19;
  /** RegularExpression Id. */
  int INT = 20;
  /** RegularExpression Id. */
  int EvtType = 21;
  /** RegularExpression Id. */
  int EVT_COND = 22;
  /** RegularExpression Id. */
  int ALTERNATIF = 23;
  /** RegularExpression Id. */
  int IF = 24;
  /** RegularExpression Id. */
  int THEN = 25;
  /** RegularExpression Id. */
  int DEBUT = 26;
  /** RegularExpression Id. */
  int FIN = 27;
  /** RegularExpression Id. */
  int ACTION = 28;
  /** RegularExpression Id. */
  int COMP = 29;
  /** RegularExpression Id. */
  int PROP = 30;
  /** RegularExpression Id. */
  int EVT = 31;
  /** RegularExpression Id. */
  int INTERFACE = 32;
  /** RegularExpression Id. */
  int TRUE = 33;
  /** RegularExpression Id. */
  int FALSE = 34;
  /** RegularExpression Id. */
  int INITIALISATION = 35;
  /** RegularExpression Id. */
  int END = 36;
  /** RegularExpression Id. */
  int AFFECT = 37;
  /** RegularExpression Id. */
  int AND = 38;
  /** RegularExpression Id. */
  int NUMERIQUE = 39;
  /** RegularExpression Id. */
  int ALPHANUMERIQUE = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<LETTRE>",
    "<NUMERO>",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "\",\"",
    "<TYPE>",
    "<BOOLEAN>",
    "\"int\"",
    "<EvtType>",
    "<EVT_COND>",
    "\"~\"",
    "\"if\"",
    "\"then\"",
    "\"DEBUT\"",
    "\"FIN\"",
    "\"ACTIONS\"",
    "\"COMP\"",
    "\"PROP\"",
    "\"EVT\"",
    "\"INTERFACE\"",
    "\"True\"",
    "\"False\"",
    "\"INITIALISATIONS\"",
    "\"END\"",
    "\":=\"",
    "\"and\"",
    "<NUMERIQUE>",
    "<ALPHANUMERIQUE>",
  };

}
